scalar Date

# Application Types

type User {
  id: Int!
  createdAt: String!
  email: String!
  profile: Profile
  updatedAt: String!
}

input UserInput {
  email: String!
  password: String!
  profile: ProfileInput
}

type Profile {
  id: Int!
  fullName: String!
  fullAddress: String
  phoneNumber: String
  createdAt: Date!
  updatedAt: Date!
  user: User
}

input ProfileInput {
  fullName: String!
  fullAddress: String
  phoneNumber: String
  userId: Int
  user: UserInput
}

# Root Types

type Query {
  User(id: Int!): User
  allUsers: [User]

  Profile(id: Int!): Profile
  allProfiles: [Profile]
}

type Mutation {
  createUser(user: UserInput!): User
  updateUser(id: Int!, email: String, password: String): User

  createProfile(fullName: String!, fullAddress: String, phoneNumber: String, userId: Int!): Profile
}
